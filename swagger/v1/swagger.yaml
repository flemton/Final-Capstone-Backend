---
openapi: 3.0.1
info:
  title: Tesla Test-Drive
  version: v1
paths:
  "/api/users":
    get:
      summary: List all users
      tags:
      - Users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    username:
                      type: string
                  required:
                  - id
                  - username
    post:
      summary: Create a new user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                required:
                - id
                - username
        '422':
          description: Invalid user data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: array
                    items:
                      type: string
                required:
                - error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  properties:
                    username:
                      type: string
              required:
              - username
  "/api/users/{id}":
    get:
      summary: Retrieve a user by ID
      tags:
      - Users
      parameters:
      - name: id
        in: path
        type: integer
        description: ID of user
        required: true
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                required:
                - id
                - username
        '404':
          description: User not found
  "/api/users/current":
    get:
      summary: Retrieve the current user
      tags:
      - Users
      security:
      - BearerAuth: []
      responses:
        '200':
          description: Current user
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                required:
                - id
                - username
        '401':
          description: Not logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
  "/api/sessions":
    post:
      summary: Create a new session
      tags:
      - Sessions
      parameters: []
      responses:
        '200':
          description: Session created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  user_id:
                    type: integer
                  message:
                    type: string
                required:
                - success
                - user_id
                - message
        '422':
          description: Invalid user data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: array
                    items:
                      type: string
                required:
                - error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  properties:
                    username:
                      type: string
              required:
              - username
  "/api/tesla_models":
    get:
      summary: List all Tesla models
      tags:
      - Tesla Models
      responses:
        '200':
          description: List of Tesla models
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    description:
                      type: string
                    deposit:
                      type: integer
                    finance_fee:
                      type: integer
                    option_to_purchase_fee:
                      type: integer
                    total_amount_payable:
                      type: integer
                    duration:
                      type: integer
                    removed:
                      type: boolean
                    image_url:
                      type: string
                      nullable: true
                  required:
                  - id
                  - name
                  - description
                  - deposit
                  - finance_fee
                  - option_to_purchase_fee
                  - total_amount_payable
                  - duration
                  - removed
    post:
      summary: Create a new Tesla model
      tags:
      - Tesla Models
      parameters: []
      responses:
        '201':
          description: Tesla model created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
        '422':
          description: Invalid Tesla model data
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                required:
                - errors
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                deposit:
                  type: integer
                finance_fee:
                  type: integer
                option_to_purchase_fee:
                  type: integer
                total_amount_payable:
                  type: integer
                duration:
                  type: integer
                removed:
                  type: boolean
                image:
                  type: string
                  format: binary
              required:
              - name
              - description
              - deposit
              - finance_fee
              - option_to_purchase_fee
              - total_amount_payable
              - duration
              - removed
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                deposit:
                  type: integer
                finance_fee:
                  type: integer
                option_to_purchase_fee:
                  type: integer
                total_amount_payable:
                  type: integer
                duration:
                  type: integer
                removed:
                  type: boolean
                image:
                  type: string
                  format: binary
              required:
              - name
              - description
              - deposit
              - finance_fee
              - option_to_purchase_fee
              - total_amount_payable
              - duration
              - removed
  "/api/tesla_models/{id}":
    get:
      summary: Retrieve a Tesla model by ID
      tags:
      - Tesla Models
      parameters:
      - name: id
        in: path
        type: integer
        description: ID of Tesla model
        required: true
      responses:
        '200':
          description: Tesla model found
          content:
            application/json:
              schema:
                type: object
                properties:
                  tesla_model:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
                      deposit:
                        type: integer
                      finance_fee:
                        type: integer
                      option_to_purchase_fee:
                        type: integer
                      total_amount_payable:
                        type: integer
                      duration:
                        type: integer
                      removed:
                        type: boolean
                    required:
                    - id
                    - name
                    - description
                    - deposit
                    - finance_fee
                    - option_to_purchase_fee
                    - total_amount_payable
                    - duration
                    - removed
                  image_url:
                    type: string
                    nullable: true
                required:
                - tesla_model
                - image_url
    delete:
      summary: Delete a Tesla model by ID
      tags:
      - Tesla Models
      parameters:
      - name: id
        in: path
        type: integer
        description: ID of Tesla model
        required: true
      responses:
        '200':
          description: Tesla model deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
  "/api/tesla_models/{id}/reservations":
    post:
      summary: Create a new tesla reservation for a user
      tags:
      - Reservations
      parameters:
      - name: tesla_model_id
        in: path
        type: integer
        description: ID of the Tesla model
        required: true
      responses:
        '201':
          description: Reservation created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  reservation_id:
                    type: integer
                required:
                - success
                - reservation_id
        '422':
          description: Invalid reservation data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                  format: date-time
                end_date:
                  type: string
                  format: date-time
                city:
                  type: string
                user_id:
                  type: integer
              required:
              - start_date
              - end_date
              - city
  "/api/user_reservations":
    get:
      summary: List all user reservations
      tags:
      - Users
      responses:
        '200':
          description: List of user reservations
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    start_time:
                      type: string
                      format: date-time
                    end_time:
                      type: string
                      format: date-time
                    city:
                      type: string
                    tesla_model_id:
                      type: integer
                    user_id:
                      type: integer
                  required:
                  - id
                  - start_time
                  - end_time
                  - city
                  - tesla_model_id
                  - user_id
  "/api/users/{user_id}/reservations/{id}":
    get:
      summary: Retrieve a reservation by ID
      tags:
      - Reservations
      parameters:
      - name: user_id
        in: path
        type: integer
        description: ID of the user
        required: true
      - name: id
        in: path
        type: integer
        description: ID of the reservation
        required: true
      responses:
        '200':
          description: Reservation details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  start_time:
                    type: string
                    format: date-time
                  end_time:
                    type: string
                    format: date-time
                  city:
                    type: string
                  tesla_model_id:
                    type: integer
                  user_id:
                    type: integer
                required:
                - id
                - start_time
                - end_time
                - city
                - tesla_model_id
                - user_id
    put:
      summary: Update a reservation by ID
      tags:
      - Reservations
      parameters:
      - name: user_id
        in: path
        type: integer
        description: ID of the user
        required: true
      - name: id
        in: path
        type: integer
        description: ID of the reservation
        required: true
      responses:
        '200':
          description: Reservation updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  reservation:
                    type: object
                    properties:
                      id:
                        type: integer
                      start_date:
                        type: string
                        format: date-time
                      end_date:
                        type: string
                        format: date-time
                      city:
                        type: string
                      tesla_model_id:
                        type: integer
                      user_id:
                        type: integer
                    required:
                    - id
                    - start_date
                    - end_date
                    - city
                    - tesla_model_id
                    - user_id
                required:
                - success
                - reservation
        '422':
          description: Invalid reservation data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                start_time:
                  type: string
                  format: date-time
                end_time:
                  type: string
                  format: date-time
                city:
                  type: string
              required:
              - start_time
              - end_time
              - city
    delete:
      summary: Delete a reservation by ID
      tags:
      - Reservations
      parameters:
      - name: user_id
        in: path
        type: integer
        description: ID of the user
        required: true
      - name: id
        in: path
        type: integer
        description: ID of the reservation
        required: true
      responses:
        '200':
          description: Reservation deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                required:
                - success
                - message
servers:
- url: http://127.0.0.1:3000
  variables:
    defaultHost:
      default: http://127.0.0.1:3000
